let list = struct(list)
  type t = sig
    val head : unit.t -> int.t
    val tail : unit.t -> list.t
  end
  let empty : list.t = struct
    let head = fun (x : unit.t) -> Unimplemented (* Must fail... *)
    let tail = fun (x : unit.t) -> Unimplemented (* Must fail... *)
  end
  let cons : int.t -> list.t -> list.t =
    fun(x : int.t, l : list.t) -> struct
      let head = fun(x' : unit.t) -> x
      let tail = fun(l' : unit.t) -> l
    end
end;;
