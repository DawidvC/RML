let simple = sig type A = Nothign end : struct type A = Nothing end;;

(*
let int =
  sig
    type T = Nothing
    val identity : self.T -> self.T
  end
  :
  struct
    type T = Nothing
    let identity = fun (x : self.T) -> x
  end;;

let string = sig
               type T = Nothing
               val length : self.T -> int.T
             end : struct
  type T = Nothing
  let length = fun (str : self.T) -> Unimplemented : self.T -> int.T
end;;

let y = z : sig(z)
          type T = Nothing
          val x : Nothing
          val f : z.T -> z.T
        end => struct
  type T = Nothing
  let x = Unimplemented
  let f = fun (x : z.T) -> x
} in y.x;;
*)

