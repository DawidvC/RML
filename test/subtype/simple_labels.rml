(* Abstract type with different names. *)
sig type t end !<: sig type s end;;

(* Abstract type with same name. As the signature is not binded to a name, it's considered to be the same. *)
sig type t end <: sig type t end;;

(* Same concrete type but different type alias. *)
sig type t = Nothing end !<: sig type s = Nothing end;;

sig type t = Nothing end <: sig type t = Nothing end;;

sig
  type t = int.t
  val increment : int.t -> int.t
end
<:
sig
  type t = int.t
  val increment : int.t -> int.t
end;;

sig type t : Nothing .. int.t end <: sig type t end;;

sig type t : Nothing .. int.t end !<: sig type t = int.t end;;

let x = struct type t = int.t end;;

let y = struct type t = int.t end;;

sig type t = x.T end <: sig type t = int.t end;;

sig type t = x.T end <: sig type t = y.T end;;
