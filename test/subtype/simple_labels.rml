(* Abstract type with different names. *)
sig type t end !<: sig type s end;;

(* Abstract type with same name. As the signature is not binded to a name, it's considered to be the same. *)
sig type t end <: sig type t end;;

(* Same concrete type but different type alias. *)
sig type t = Nothing end !<: sig type s = Nothing end;;

sig type t = Nothing end <: sig type t = Nothing end;;

sig
  type t = Int.t
  val increment : Int.t -> Int.t
end
<:
sig
  type t = Int.t
  val increment : Int.t -> Int.t
end;;

sig type t : Nothing .. Int.t end <: sig type t end;;

sig type t : Nothing .. Int.t end !<: sig type t = Int.t end;;

let module X = struct type t = Int.t end;;

let module Y = struct type t = Int.t end;;

sig type t = X.t end <: sig type t = Int.t end;;

sig type t = X.t end <: sig type t = Y.t end;;
