let f = fun(x : int.T, y : int.T, b : bool.T) -> b;;

let simple = sig type A = Nothing end : struct type A = Nothing end;;

let int = sig
  type T = Nothing
  val identity : self.T -> self.T
end : struct
  type T = Nothing
  let identity = fun (x : self.T) -> x
end [@show_derivation_tree, no_context, check_well_formed] ;;

let string = sig
  type T = Nothing
  val length : self.T -> int.T
end : struct
  type T = Nothing
  let length = fun (str : self.T) -> Unimplemented : self.T -> int.T
end;;

let y = sig
  type T = Nothing
  val x : Nothing
  val f : self.T -> self.T
end : struct
  type T = Nothing
  let x = Unimplemented
  let f = fun (x : self.T) -> x
end [@show_derivation_tree, no_context];;
