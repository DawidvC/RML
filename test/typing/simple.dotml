let f = fun(x : int.t, y : int.t, b : bool.t) -> b;;

let simple = sig type t = Nothing end : struct type t = Nothing end;;

let int = sig
  type t = Nothing
  val identity : self.t -> self.t
end : struct
  type t = Nothing
  let identity = fun (x : self.t) -> x
end [@show_derivation_tree, no_context, check_well_formed] ;;

let string = sig
  type t = Nothing
  val length : self.t -> int.t
end : struct
  type t = Nothing
  let length = fun (str : self.t) -> Unimplemented : self.t -> int.t
end;;

let y = sig
  type t = Nothing
  val x : Nothing
  val f : self.t -> self.t
end : struct
  type t = Nothing
  let x = Unimplemented
  let f = fun (x : self.t) -> x
end [@show_derivation_tree, no_context];;
